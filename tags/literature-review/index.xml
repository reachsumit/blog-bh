<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>literature review - Tag - Sumit&#39;s Diary</title>
        <link>https://blog.reachsumit.com/tags/literature-review/</link>
        <description>literature review - Tag - Sumit&#39;s Diary</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>sam.sumitkumar@gmail.com (Sumit Kumar)</managingEditor>
            <webMaster>sam.sumitkumar@gmail.com (Sumit Kumar)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 21 Jan 2023 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://blog.reachsumit.com/tags/literature-review/" rel="self" type="application/rss+xml" /><item>
    <title>Specialized Deep Learning Architectures for Time Series Forecasting</title>
    <link>https://blog.reachsumit.com/posts/2023/01/dl-for-forecasting/</link>
    <pubDate>Sat, 21 Jan 2023 00:00:00 &#43;0000</pubDate>
    <author>Sumit Kumar</author>
    <guid>https://blog.reachsumit.com/posts/2023/01/dl-for-forecasting/</guid>
    <description><![CDATA[Introduction Why Should We Use Deep Learning for Forecasting? Statistical algorithms have long been widely used for making forecasts with time series data. These classical algorithms, like Exponential Smoothing, and ARIMA models, prescribe the data generation process and require manual selections to account for factors like the trend, seasonality, and auto-correlation. However, modern data applications often deal with hundreds or millions of related time series. For example, a demand forecasting algorithm at Amazon may have to consider sales data from millions of products, and an engagement forecasting algorithm at Instagram may have to model metrics from millions of posts.]]></description>
</item>
<item>
    <title>Statistical vs Machine Learning vs Deep Learning Modeling for Time Series Forecasting</title>
    <link>https://blog.reachsumit.com/posts/2022/12/stats-vs-ml-for-ts/</link>
    <pubDate>Tue, 20 Dec 2022 00:00:00 &#43;0000</pubDate>
    <author>Sumit Kumar</author>
    <guid>https://blog.reachsumit.com/posts/2022/12/stats-vs-ml-for-ts/</guid>
    <description><![CDATA[Over recent decades, Machine Learning (ML) and, its subdomain, Deep Learning (DL) based algorithms have achieved remarkable success in various areas, such as image processing, natural language understanding, and speech recognition. However, ML algorithms haven&rsquo;t quite had the same widely known and unquestionable superiority when it comes to forecasting applications in the time series domain. While ML algorithms have to overcome the challenges in modeling the non-i.i.d. nature of data inherent in the time series domain, statistical models excel in this setting and provide explicit means to model time series structural elements, such as trend and seasonality.]]></description>
</item>
<item>
    <title>Recommender Systems for Modeling Feature Interactions under Sparse Settings</title>
    <link>https://blog.reachsumit.com/posts/2022/11/sparse-recsys/</link>
    <pubDate>Sun, 06 Nov 2022 00:00:00 &#43;0000</pubDate>
    <author>Sumit Kumar</author>
    <guid>https://blog.reachsumit.com/posts/2022/11/sparse-recsys/</guid>
    <description><![CDATA[Many machine learning domains, such as recommender systems, targeted advertisement, search ranking, and text analysis contain highly sparse data because of the large categorical variable domains. This sparsity makes it hard for ML algorithms to model second-order and above feature interactions. In this article, I summarize the need for modeling feature interactions and introduce some of the most popular ML architectures designed for estimating interactions from sparse data.
Introduction Problem with sparse inputs A variety of Information Retrieval and Data Mining tasks, such as Recommender Systems, Targeted Advertising, Search Ranking, etc.]]></description>
</item>
<item>
    <title>Collaborative Filtering based Recommender Systems for Implicit Feedback Data</title>
    <link>https://blog.reachsumit.com/posts/2022/09/explicit-implicit-cf/</link>
    <pubDate>Sun, 25 Sep 2022 00:00:00 &#43;0000</pubDate>
    <author>Sumit Kumar</author>
    <guid>https://blog.reachsumit.com/posts/2022/09/explicit-implicit-cf/</guid>
    <description><![CDATA[Different Flavors of Recommenders At a high-level, Recommender systems work based on two different strategies (or a hybrid of the two) for recommending content.
Collaborative Filtering: Algorithms that use usage data, such as explicit or implicit feedback from the user. Content-based Filtering: Algorithms that use content metadata and user profile. For example, a movie can be profiled based on its genre, IMDb ratings, box-office sales, etc., and a user can be profile based on their demographic information or their answers to an onboarding survey.]]></description>
</item>
<item>
    <title>Towards Empathetic Dialogue Systems</title>
    <link>https://blog.reachsumit.com/posts/2020/12/generating-empathetic-responses/</link>
    <pubDate>Mon, 07 Dec 2020 00:00:00 &#43;0000</pubDate>
    <author>Sumit Kumar</author>
    <guid>https://blog.reachsumit.com/posts/2020/12/generating-empathetic-responses/</guid>
    <description><![CDATA[<p>Recognizing feelings in the conversation partner and replying empathetically is a trivial skill for humans. But how can we infuse empathy into responses generated by a conversational dialogue agent or any of the text generation algorithm in Natural Language Processing? In this article, I will describe what empathy means through the lens of various academic disciplines and then do an in-depth review of the prior and current state-of-the-art NLU systems that can simulate empathy.</p>]]></description>
</item>
</channel>
</rss>
